apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "2"
  labels:
    chart: airflow-1.7.0
    component: create-user-job
    heritage: Helm
    release: airflow
    tier: airflow
  name: airflow-create-user
  namespace: default
spec:
  template:
    metadata:
      labels:
        component: create-user-job
        release: airflow
        tier: airflow
    spec:
      affinity: {}
      containers:
      - args:
        - bash
        - -c
        - |-
          exec \
          airflow users create "$@"
        - --
        - -r
        - Admin
        - -u
        - admin
        - -e
        - admin@example.com
        - -f
        - admin
        - -l
        - user
        - -p
        - admin
        env:
        - name: AIRFLOW__CORE__FERNET_KEY
          valueFrom:
            secretKeyRef:
              key: fernet-key
              name: airflow-fernet-key
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-airflow-metadata
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-airflow-metadata
        - name: AIRFLOW_CONN_AIRFLOW_DB
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-airflow-metadata
        - name: AIRFLOW__WEBSERVER__SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: webserver-secret-key
              name: airflow-webserver-secret-key
        - name: AIRFLOW__CELERY__BROKER_URL
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-broker-url
        envFrom: []
        image: apache/airflow:2.4.1
        imagePullPolicy: IfNotPresent
        name: create-user
        resources: {}
        volumeMounts:
        - mountPath: /opt/airflow/airflow.cfg
          name: config
          readOnly: true
          subPath: airflow.cfg
      nodeSelector: {}
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 0
        runAsUser: 50000
      serviceAccountName: airflow-create-user-job
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: airflow-airflow-config
        name: config

