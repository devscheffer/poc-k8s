apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nessie.fullname" . }}
  labels:
    {{- include "nessie.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nessie.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nessie.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nessie.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.Version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NESSIE_VERSION_STORE_TYPE
              value: {{ .Values.versionStoreType }}

            {{- if .Values.logLevel }}
            - name: QUARKUS_LOG_LEVEL
              value: {{ .Values.logLevel }}
            - name: QUARKUS_CONSOLE_LOG_LEVEL
              value: {{ .Values.logLevel }}
            - name: QUARKUS_LOG_FILE_LEVEL
              value: {{ .Values.logLevel }}
            {{- end }}

            {{- if eq .Values.versionStoreType "DYNAMO" }}
            {{- if .Values.dynamodb.region }}
            - name: AWS_REGION
              value: {{ .Values.dynamodb.region }}
            {{- end }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dynamodb.secret.name }}
                  key: {{ .Values.dynamodb.secret.awsAccessKeyId }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dynamodb.secret.name }}
                  key: {{ .Values.dynamodb.secret.awsSecretAccessKey }}
            {{- end }}

            {{- if eq .Values.versionStoreType "ROCKS" }}
            {{- if .Values.rocksdb.dbPath }}
            - name: NESSIE_VERSION_STORE_ROCKS_DB_PATH
              value: {{ .Values.rocksdb.dbPath }}
            {{- end }}
            {{- end }}

            {{- if eq .Values.versionStoreType "MONGO" }}
            {{- if .Values.mongodb.name }}
            - name: QUARKUS_MONGODB_DATABASE
              value: {{ .Values.mongodb.name }}
            {{- end }}
            {{- if .Values.mongodb.connectionString }}
            - name: QUARKUS_MONGODB_CONNECTION_STRING
              value: {{ .Values.mongodb.connectionString }}
            {{- end }}
            {{- if .Values.mongodb.secret.name }}
            - name: QUARKUS_MONGODB_CREDENTIALS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongodb.secret.name }}
                  key: {{ .Values.mongodb.secret.username }}
            - name: QUARKUS_MONGODB_CREDENTIALS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongodb.secret.name }}
                  key: {{ .Values.mongodb.secret.password }}
            {{- end }}
            {{- end }}

            {{- if eq .Values.versionStoreType "TRANSACTIONAL" }}
            - name: QUARKUS_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secret.name }}
                  key: {{ .Values.postgres.secret.username }}
            - name: QUARKUS_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secret.name }}
                  key: {{ .Values.postgres.secret.password }}
            - name: QUARKUS_DATASOURCE_JDBC_URL
              value: {{ .Values.postgres.jdbcUrl }}
            {{- end }}

            {{- range .Values.versionStoreAdvancedConfig }}
            - name: {{ .key }}
              value: {{ .value | quote }}
            {{- end }}

            {{- if .Values.authentication.enabled }}
            - name: NESSIE_SERVER_AUTHENTICATION_ENABLED
              value: {{ .Values.authentication.enabled | quote }}
            {{- if .Values.authentication.oidcAuthServerUrl }}
            - name: QUARKUS_OIDC_AUTH_SERVER_URL
              value: {{ .Values.authentication.oidcAuthServerUrl }}
            {{- end }}
            {{- if .Values.authentication.oidcClientId }}
            - name: QUARKUS_OIDC_CLIENT_ID
              value: {{ .Values.authentication.oidcClientId }}
            {{- end }}
            {{- end }}

            {{- if .Values.authorization.enabled }}
            - name: NESSIE_SERVER_AUTHORIZATION_ENABLED
              value: {{ .Values.authorization.enabled | quote }}
            {{- if .Values.authorization.rules }}
            {{- range $ruleId, $rule := .Values.authorization.rules }}
            - name: NESSIE_SERVER_AUTHORIZATION_RULES_{{ upper $ruleId }}
              value: {{ $rule }}
            {{- end }}
            {{- end }}
            {{- end }}

            {{- if .Values.jaegerTracing.enabled }}
            {{- if .Values.jaegerTracing.serviceName }}
            - name: QUARKUS_JAEGER_SERVICE_NAME
              value: {{ .Values.jaegerTracing.serviceName }}
            {{- end }}
            {{- if .Values.jaegerTracing.publishMetrics }}
            - name: QUARKUS_JAEGER_METRICS_ENABLED
              value: {{ .Values.jaegerTracing.publishMetrics | quote }}
            {{- end }}
            {{- if .Values.jaegerTracing.samplerType }}
            - name: QUARKUS_JAEGER_SAMPLER_TYPE
              value: {{ .Values.jaegerTracing.samplerType }}
            {{- end }}
            {{- if .Values.jaegerTracing.samplerParam }}
            - name: QUARKUS_JAEGER_SAMPLER_PARAM
              value: {{ .Values.jaegerTracing.samplerParam | quote }}
            {{- end }}
            {{- if .Values.jaegerTracing.endpoint }}
            - name: QUARKUS_JAEGER_ENDPOINT
              value: {{ .Values.jaegerTracing.endpoint }}
            {{- end }}
            {{- end }}
          ports:
            - name: nessie-server
              containerPort: 19120
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 19120
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 19120
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 45
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
